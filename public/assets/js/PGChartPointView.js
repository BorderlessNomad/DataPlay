// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.PGChartPointView = (function(_super) {
    __extends(PGChartPointView, _super);

    function PGChartPointView() {
      _ref = PGChartPointView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PGChartPointView.prototype.tagName = 'div';

    PGChartPointView.prototype.className = 'pointDialog';

    PGChartPointView.prototype.template = _.template($('#pointDataTemplate').html());

    PGChartPointView.prototype.events = {
      "click .pointSave": "savePoint",
      "click .pointRemove": "removePoint",
      "click .pointCancel": "closeDialog"
    };

    PGChartPointView.prototype.initialize = function() {
      return this.listenTo(this.model, 'change', this.render);
    };

    PGChartPointView.prototype.render = function() {
      this.$el.html(this.template(this.model.attributes));
      return this;
    };

    PGChartPointView.prototype.savePoint = function() {
      return alert("Saving point " + (this.model.get('title')));
    };

    PGChartPointView.prototype.removePoint = function() {
      alert("Removing point " + (this.model.get('title')));
      return this.remove();
    };

    PGChartPointView.prototype.closeDialog = function() {
      return this.remove();
    };

    return PGChartPointView;

  })(Backbone.View);

}).call(this);
