#######################################################################################
# Auto generated by API on {{ generatedOn|date('r') }}
#
# Note:
# 	Do not try to modify this file, it will be replaced everytime an API call is made.
#######################################################################################

global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log     global
    mode    http
    balance roundrobin

    option  abortonclose # abort request if client closes output channel while waiting
    option  httpclose # add "Connection:close" header if it is missing
    option  forwardfor # insert x-forwarded-for header so that app servers can see both proxy and client IPs
    option  redispatch # any server can handle any session
    option  http-server-close # allows keep-alive and pipelining
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  600s
    timeout server  600s
    timeout check   5s
    timeout http-keep-alive 300s

    retries 3 # number of connection retries for the session
    maxconn 10000

    http-check expect status 200

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend web
    bind *:80

    # API traffic goes to Master cluster
    acl api path_beg /api
    use_backend masters if api

    # Other traffic goes to Gamification server
    default_backend gamification

backend gamification
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    cookie DPSession prefix
    {% for node in gamification %}
    server {{ node.id|lower }} {{ node.endpoint }} cookie {{ node.id|upper }} check # added on {{ node.timestamp|date('r') }}
    {% endfor %}

backend masters
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    option httpchk HEAD /api/ping HTTP/1.1\r\nHost:localhost
    cookie DPSession prefix
    {% for node in master %}
    server {{ node.id|lower }} {{ node.endpoint }} cookie {{ node.id|upper }} check # added on {{ node.timestamp|date('r') }}
    {% endfor %}

listen stats *:1936
    stats enable
    stats uri /
    stats hide-version
    stats auth playgen:D@taP1aY
